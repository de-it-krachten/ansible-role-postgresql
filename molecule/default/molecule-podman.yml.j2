---

dependency:
  name: galaxy
driver:
  name: podman
lint: |
  set -e
  yamllint .
  ln -fs molecule/default/requirements.yml
  ansible-lint
  rm -f requirements.yml
platforms:
{% for platform in MOLECULE_DISTROS %}
  - name: postgresql-{{ platform.name }}-pg11
    image: "{{ platform.image }}"
{% if platform.kernel_memory is defined %}
    kernel_memory: {{ platform.kernel_memory }}
{% endif %}
{% if platform.memory is defined %}
    memory: {{ platform.memory }}
{% endif %}
    rhsm: {{ platform.rhsm | default(False) }}
    command: ${MOLECULE_DOCKER_COMMAND:-""}
{% if platform.environment is defined %}
    environment:
{% for key, value in platform.environment.items() %}
      {{ key }}: "{{ value }}"
{% endfor %}
{% endif %}
    volumes:
{% for volume in platform.volumes %}
      - {{ volume }}
{% endfor %}
{% if platform.networks is defined %}
    networks:
{% for network in platform.networks %}
      - name: postgresql-{{ network }}
{% endfor %}
{% endif %}
{% if platform.ports is defined %}
    published_ports:
{% for port in platform.ports %}
      - {{ port }}
{% endfor %}
{% endif %}
{% if platform.cgroupns_mode is defined %}
    cgroupns_mode: {{ platform.cgroupns_mode }}
{% endif %}
    privileged: {{ platform.privileged | default(True) }}
    pre_build_image: {{ platform.pre_build_image | default(True) }}
    dockerfile: Dockerfile.{{ platform.name }}.j2
  - name: postgresql-{{ platform.name }}-pg12
    image: "{{ platform.image }}"
{% if platform.kernel_memory is defined %}
    kernel_memory: {{ platform.kernel_memory }}
{% endif %}
{% if platform.memory is defined %}
    memory: {{ platform.memory }}
{% endif %}
    rhsm: {{ platform.rhsm | default(False) }}
    command: ${MOLECULE_DOCKER_COMMAND:-""}
{% if platform.environment is defined %}
    environment:
{% for key, value in platform.environment.items() %}
      {{ key }}: "{{ value }}"
{% endfor %}
{% endif %}
    volumes:
{% for volume in platform.volumes %}
      - {{ volume }}
{% endfor %}
{% if platform.networks is defined %}
    networks:
{% for network in platform.networks %}
      - name: postgresql-{{ network }}
{% endfor %}
{% endif %}
{% if platform.ports is defined %}
    published_ports:
{% for port in platform.ports %}
      - {{ port }}
{% endfor %}
{% endif %}
{% if platform.cgroupns_mode is defined %}
    cgroupns_mode: {{ platform.cgroupns_mode }}
{% endif %}
    privileged: {{ platform.privileged | default(True) }}
    pre_build_image: {{ platform.pre_build_image | default(True) }}
    dockerfile: Dockerfile.{{ platform.name }}.j2
  - name: postgresql-{{ platform.name }}-pg13
    image: "{{ platform.image }}"
{% if platform.kernel_memory is defined %}
    kernel_memory: {{ platform.kernel_memory }}
{% endif %}
{% if platform.memory is defined %}
    memory: {{ platform.memory }}
{% endif %}
    rhsm: {{ platform.rhsm | default(False) }}
    command: ${MOLECULE_DOCKER_COMMAND:-""}
{% if platform.environment is defined %}
    environment:
{% for key, value in platform.environment.items() %}
      {{ key }}: "{{ value }}"
{% endfor %}
{% endif %}
    volumes:
{% for volume in platform.volumes %}
      - {{ volume }}
{% endfor %}
{% if platform.networks is defined %}
    networks:
{% for network in platform.networks %}
      - name: postgresql-{{ network }}
{% endfor %}
{% endif %}
{% if platform.ports is defined %}
    published_ports:
{% for port in platform.ports %}
      - {{ port }}
{% endfor %}
{% endif %}
{% if platform.cgroupns_mode is defined %}
    cgroupns_mode: {{ platform.cgroupns_mode }}
{% endif %}
    privileged: {{ platform.privileged | default(True) }}
    pre_build_image: {{ platform.pre_build_image | default(True) }}
    dockerfile: Dockerfile.{{ platform.name }}.j2
  - name: postgresql-{{ platform.name }}-pg14
    image: "{{ platform.image }}"
{% if platform.kernel_memory is defined %}
    kernel_memory: {{ platform.kernel_memory }}
{% endif %}
{% if platform.memory is defined %}
    memory: {{ platform.memory }}
{% endif %}
    rhsm: {{ platform.rhsm | default(False) }}
    command: ${MOLECULE_DOCKER_COMMAND:-""}
{% if platform.environment is defined %}
    environment:
{% for key, value in platform.environment.items() %}
      {{ key }}: "{{ value }}"
{% endfor %}
{% endif %}
    volumes:
{% for volume in platform.volumes %}
      - {{ volume }}
{% endfor %}
{% if platform.networks is defined %}
    networks:
{% for network in platform.networks %}
      - name: postgresql-{{ network }}
{% endfor %}
{% endif %}
{% if platform.ports is defined %}
    published_ports:
{% for port in platform.ports %}
      - {{ port }}
{% endfor %}
{% endif %}
{% if platform.cgroupns_mode is defined %}
    cgroupns_mode: {{ platform.cgroupns_mode }}
{% endif %}
    privileged: {{ platform.privileged | default(True) }}
    pre_build_image: {{ platform.pre_build_image | default(True) }}
    dockerfile: Dockerfile.{{ platform.name }}.j2
  - name: postgresql-{{ platform.name }}-pg15
    image: "{{ platform.image }}"
{% if platform.kernel_memory is defined %}
    kernel_memory: {{ platform.kernel_memory }}
{% endif %}
{% if platform.memory is defined %}
    memory: {{ platform.memory }}
{% endif %}
    rhsm: {{ platform.rhsm | default(False) }}
    command: ${MOLECULE_DOCKER_COMMAND:-""}
{% if platform.environment is defined %}
    environment:
{% for key, value in platform.environment.items() %}
      {{ key }}: "{{ value }}"
{% endfor %}
{% endif %}
    volumes:
{% for volume in platform.volumes %}
      - {{ volume }}
{% endfor %}
{% if platform.networks is defined %}
    networks:
{% for network in platform.networks %}
      - name: postgresql-{{ network }}
{% endfor %}
{% endif %}
{% if platform.ports is defined %}
    published_ports:
{% for port in platform.ports %}
      - {{ port }}
{% endfor %}
{% endif %}
{% if platform.cgroupns_mode is defined %}
    cgroupns_mode: {{ platform.cgroupns_mode }}
{% endif %}
    privileged: {{ platform.privileged | default(True) }}
    pre_build_image: {{ platform.pre_build_image | default(True) }}
    dockerfile: Dockerfile.{{ platform.name }}.j2
  - name: postgresql-{{ platform.name }}-pg16
    image: "{{ platform.image }}"
{% if platform.kernel_memory is defined %}
    kernel_memory: {{ platform.kernel_memory }}
{% endif %}
{% if platform.memory is defined %}
    memory: {{ platform.memory }}
{% endif %}
    rhsm: {{ platform.rhsm | default(False) }}
    command: ${MOLECULE_DOCKER_COMMAND:-""}
{% if platform.environment is defined %}
    environment:
{% for key, value in platform.environment.items() %}
      {{ key }}: "{{ value }}"
{% endfor %}
{% endif %}
    volumes:
{% for volume in platform.volumes %}
      - {{ volume }}
{% endfor %}
{% if platform.networks is defined %}
    networks:
{% for network in platform.networks %}
      - name: postgresql-{{ network }}
{% endfor %}
{% endif %}
{% if platform.ports is defined %}
    published_ports:
{% for port in platform.ports %}
      - {{ port }}
{% endfor %}
{% endif %}
{% if platform.cgroupns_mode is defined %}
    cgroupns_mode: {{ platform.cgroupns_mode }}
{% endif %}
    privileged: {{ platform.privileged | default(True) }}
    pre_build_image: {{ platform.pre_build_image | default(True) }}
    dockerfile: Dockerfile.{{ platform.name }}.j2
{% endfor %}
provisioner:
  name: ansible
{% if MOLECULE_ANSIBLE_ARGS is defined %}
  ansible_args:
{% for molecule_ansible_arg in MOLECULE_ANSIBLE_ARGS %}
    - {{ molecule_ansible_arg }}
{% endfor %}
{% endif %}
  env:
    ANSIBLE_PIPELINING: "True"
    ANSIBLE_VERBOSITY: 0
  lint:
    name: ansible-lint
  playbooks:
    converge: ${MOLECULE_PLAYBOOK:-converge.yml}
  inventory:
    group_vars: {"linux": {"ansible_user": "vagrant", "ansible_password": "vagrant"}, "windows": {"ansible_user": "vagrant", "ansible_password": "vagrant", "ansible_become_user": "vagrant", "ansible_become_method": "runas", "ansible_connection": "ssh", "ansible_shell_type": "cmd"}}
    host_vars:
{% for platform in MOLECULE_DISTROS %}
      postgresql-{{ platform.name }}-pg11:
        postgresql_version: 11
      postgresql-{{ platform.name }}-pg12:
        postgresql_version: 12
      postgresql-{{ platform.name }}-pg13:
        postgresql_version: 13
      postgresql-{{ platform.name }}-pg14:
        postgresql_version: 14
      postgresql-{{ platform.name }}-pg15:
        postgresql_version: 15
      postgresql-{{ platform.name }}-pg16:
        postgresql_version: 16

{% endfor %}
scenario:
  name: default
verifier:
  name: ansible
