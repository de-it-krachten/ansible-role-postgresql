---

- name: Setup-repository RedHat
  when: ansible_os_family == 'RedHat'
  block:

    - name: Import RPM signing key
      ansible.builtin.rpm_key:
        key: "{{ postgresql_gpg_key }}"
        state: present
      environment:
        HTTPS_PROXY: "{{ postgresql_proxy | default('') }}"
        HTTP_PROXY: "{{ postgresql_proxy | default('') }}"

    - name: Disable the built-in PostgreSQL module
      ansible.builtin.command:
        cmd: dnf -qy module disable postgresql
      changed_when: false
      failed_when: _postgresql.rc > 1
      register: _postgresql
      when: ansible_distribution_major_version | int >= 8

    - name: Setup yum/dnf repository
      ansible.builtin.yum_repository:
        name: postgresql-{{ postgresql_version }}
        description: PostgresSQL {{ postgresql_version }}
        file: postgresql.repo
        baseurl: "{{ postgresql_repo }}"
        gpgcheck: yes
        enabled: no
        proxy: "{{ postgresql_proxy | default('') }}"

    - name: Install postgresql required packages
      ansible.builtin.dnf:
        name: "{{ vars['postgresql_' + postgresql_install_type + '_packages'] }}"
        state: "{{ postgresql_package_state | default('present') }}"
        enablerepo: "postgresql-{{ postgresql_version }}"

    - name: Install postgresql optional packages
      ansible.builtin.dnf:
        name: "{{ postgresql_optional_packages }}"
        state: "{{ postgresql_package_state | default('present') }}"
        enablerepo: "postgresql-{{ postgresql_version }}"
      when: postgresql_install_optional_packages | bool


- name: Setup-repository Debian
  when: ansible_os_family == 'Debian'
  block:

    - name: Install GPG
      ansible.builtin.apt:
        name: gnupg
        state: present

    - name: Download APT signing key
      ansible.builtin.get_url:
        url: "{{ postgresql_gpg_key }}"
        dest: /tmp/postgresql.asc
        mode: "0644"
      changed_when: false

    - name: Convert APT key into binary format
      ansible.builtin.command:
        cmd: >-
          gpg
          --batch
          --yes
          --no-tty
          --dearmor
          -o /tmp/postgresql.gpg
          /tmp/postgresql.asc
      changed_when: false

    - name: Import Microsoft GPG key
      ansible.builtin.apt_key:
        state: present
        file: /tmp/postgresql.gpg
        keyring: /etc/apt/trusted.gpg.d/postgresql.gpg
      become: yes
      when: ansible_distribution_major_version | int < 12

    - name: Copy APT signing key into the proper drop-in directory
      ansible.builtin.copy:
        src: /tmp/postgresql.gpg
        dest: /etc/apt/trusted.gpg.d/postgresql.gpg
        remote_src: yes
        mode: "0644"
      when: ansible_distribution_major_version | int >= 12

    - name: Setup Microsoft APT repository  # noqa jinja[spacing]
      ansible.builtin.apt_repository:
        filename: virtualbox
        repo: >-
          {%- if ansible_distribution_major_version | int < 12 -%}
          deb
          [arch=amd64,arm64]
          {{ postgresql_repo }}
          {{ ansible_distribution_release }}-pgdg
          main
          {%- else -%}
          deb
          [arch=amd64,arm64 signed-by=/etc/apt/trusted.gpg.d/postgresql.gpg]
          {{ postgresql_repo }}
          {{ ansible_distribution_release }}-pgdg
          main
          {%- endif -%}
        state: present
      become: yes
      register: __apt_repository

    - name: Update package list  # noqa no-handler
      ansible.builtin.apt:
        update_cache: yes
      when: __apt_repository.changed

    - name: Install postgresql required OS packages
      ansible.builtin.apt:
        name: "{{ vars['postgresql_' + postgresql_install_type + '_packages'] }}"
        state: "{{ postgresql_package_state | default('present') }}"

    - name: Install postgresql optional OS packages
      ansible.builtin.apt:
        name: "{{ postgresql_optional_packages }}"
        state: "{{ postgresql_package_state | default('present') }}"
      when: postgresql_install_optional_packages | bool

- name: Install pykickstart into a virtualenv
  ansible.builtin.include_tasks:
    file: venv.yml
  vars:
    venv_root: "{{ postgresql_venv_root }}"
    venv_packages: "{{ postgresql_pip_packages }}"
